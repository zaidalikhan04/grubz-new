rules_version = '2';

// Firebase Storage Security Rules
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check user role
    function hasRole(role) {
      return request.auth != null && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Helper function to validate image files
    function isValidImage() {
      return resource.contentType.matches('image/.*') &&
             resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    // Profile pictures - users can upload their own profile pictures
    match /profiles/{userId}/{allPaths=**} {
      allow read: if true; // Public read for profile pictures
      allow write: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin()) &&
        isValidImage();
    }
    
    // Restaurant images (logos, banners, etc.)
    match /restaurants/{restaurantId}/{allPaths=**} {
      allow read: if true; // Public read for restaurant images
      allow write: if isAuthenticated() && 
        (request.auth.uid == restaurantId || isAdmin()) &&
        isValidImage();
    }
    
    // Menu item images
    match /restaurants/{restaurantId}/menuItems/{allPaths=**} {
      allow read: if true; // Public read for menu item images
      allow write: if isAuthenticated() && 
        (request.auth.uid == restaurantId || isAdmin()) &&
        isValidImage();
    }
    
    // Driver documents and images
    match /drivers/{driverId}/{allPaths=**} {
      allow read: if isAuthenticated() && 
        (request.auth.uid == driverId || isAdmin());
      allow write: if isAuthenticated() && 
        (request.auth.uid == driverId || isAdmin()) &&
        isValidImage();
    }
    
    // Admin uploads - only admins can upload to admin folder
    match /admin/{allPaths=**} {
      allow read, write: if isAdmin();
    }
    
    // Default deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
